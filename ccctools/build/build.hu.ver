2022.12.06 -- 1.6.1
  atirva threadpool-ra;
  felbontva kisebb prg-kre;  

2022.12.01 -- 1.6.0 
  exe/lib/so-k installalasa:
  keletkezo lib/so-k atmasolodnak BUILD_LIBDIR-be;
  keletkezo exe-k atmasolodnak BUILD_BINDIR-be;
  getenv/putenv helyett specialis fuggvenyek;
  BUILD_DBG=on beallitja BUILD_THR=1-et;

2021.08.16 -- 1.5.1
  A parfile.bld-kben ${ENV}-et ugyanugy helyettesiti, mint $(ENV)-t.
  Bosszanto volt, hogy a bash az ${ENV} alakot ismeri, a build  viszont 
  az $(ENV)-et. Jobb a bash-hez alkalmazkodni.

2021.07.26 -- 1.5.0
  MSYS2 tamogatas: msys2-ben bash scriptekkel vegzi a forditast.
  MSYS2-ben a scripteket run() helyett spawn(bash.exe)-vel inditja.
  A scriptek kiterjesztese lehet: ".bat", ".bash", ".sh", ".msys2".
  A program a prg2obj.XXX kiterjesztesebol talalja ki, hogy melyik 
  kiterjesztessel kell dolgozni.
  Az fspec.prg fuggvenyek transzparensen kezelik a "/" es "\" dirsep-et. 

2020.11.05 -- 1.4.11
  build.prg-ben a lower() fuggveny makroval hatastalanitva,
  ezzel minden filespecifikacio case sensitive lett,
  az opciok erteke is case sensitive (mert filespec is lehet bennuk),
  korabban csak kisbetus projektekben lehetett a build-et hasznalni;

2017.12.05 -- 1.4.10
  A nem talalt libeket -l-lel balrol kiegeszitve irja be az rsplnk 
  valaszfajlba, ezzel megadja az eselyt a linkernek a tovabbi keresesre. 
  Korabban az eredeti alakot irta be, ami csak arra jo, hogy mutassa, 
  mit nem talalt.

2017.05.09 -- 1.4.9
  Tobb resource-bol eloallo include-ok fuggoseget is nezi.
  A konkret eset: say(msk,sor), ahol most a sor megvaltozasa 
  is kivaltja az ujraforditast. Hogy vegul az msk2say.bat
  vagy a sor2say.bat fog-e futni, az az s_rules rendezettsegetol fugg,
  ami jelenleg az msk2say futasat eredmenyezi. A sor2say.bat-nak
  ettol fuggetlenul jelen kell lennie, mert ebbol allapitja meg
  a build a lehetseges forditasi muveleteket.

2017.04.06 -- 1.4.8
  -o opcioval egyes forrasok kihagyhatok: -o<sourcefile_to_omit>

2017.03.24 -- 1.4.7
  Csak 1024 hosszu dependency listet gondol rekurzivnak.

2017.02.11 -- 1.4.6
  A -b-vel megadott (kulso) lib-ektol valo fuggoseget is vizsgalja;
  Korabban ezt nem vizsgaltuk, mert Linuxon tulnyomoan so-kat hasznalunk,
  az uj so-k pedig az exe ujralinkelese nelkul is ervenyre jutnak.  
  Most csak a lib kiterjesztesu statikus libeket vettem be, de ertelme 
  lehet az so-kat is nezni, ha ellenorizni akarjuk az ujralinkelhetoseget;
  Kodismetles megszuntetesere: verifdep;

2016.11.27 -- 1.4.5
  Forditasi szabalyok sorrendje javitva.

2016.11.27 -- 1.4.4
  Dinamikus forditasi szabalyok.
  A futas elejen a BUILD_BAT directory tartalmabol
  megallapitja, milyen forditasi muveletek lehetsegesek,
  igy nem kell azokat a programba bedrotozni.
  Resource-ok keresese hash-sel optimalizalva.
  tdc2prgch forditas.

2016.02.19 -- 1.4.03 kozvetlen tds2obj forditas.

2015.02.22 -- 1.4.02 resource-ok forditasa is parhuzamositva.

2015.02.14 -- 1.4.01  maxthread default 4.
  maxthread defaultja 4
  ha nincs BUILD_BAT/multithread_support file, akkor maxthread=1
  ha meg van adva BUILD_THR, akkor maxthread=BUILD_THR

2015.02.12 -- 1.4.00  Párhuzamosított build verzió.

  Minden a build által elindított komponenst át kellett
  alakítani, hogy a munkafájlok között ne legyen névütközés,
  amikor pl. egyszerre több ppo2cpp.exe vagy cpp2obj.bat fut.
  Egyelőre csak a linuxos build.bat készlet van átalakítva.

  A párhuzamos futást a BUILD_THR=number_of_threads környezeti 
  változóval lehet bekapcsolni. A default 1 darab szál.

  BUILD_THR=1 esetén lehet használni a régi build scripteket
  és régi ppo2cpp-t. BUILD_THR>1 esetén az új scriptek kellenek
  és legalább 5.0.20-as ppo2cpp.
  
  Az új scriptek működnek a régi builddel (1.3.03), kivéve,
  hogy az esetleges 'error' fájlokat kézzel kell letörölni.


2011.05.21 -- 1.3.03
  search_include()-ban dirsep konverzió

2010.07.18 -- 1.3.02
  --dry (vagy BUILD_DBG=dry) opció
  
  Példa:

    export BUILD_DBG=dry  && m | less -S

  Elindítja az m (make) scriptet úgy, 
  hogy az nem hajt végre semmilyen fordítási műveletet,
  nem akad meg (nem lép ki) a hiányzó függőségek miatt,
  viszont mutatja a függőségeket.

2010.07.16 -- 1.3.01
  --debug (vagy BUILD_DBG=on/BUILD_DBG=debug) beállítása javítva.

2010.07.12 -- 1.3.00
  CCC2 backport.

2010.07.12 -- 1.2.28
  Az include-ok include-jait is vizsgálja.
  Az indentált (nem sor eleji) #include-okat is nézi.
  Az <fspec> alakú filéket is nézi (nem csak az "fspec" alakúakat).

  Korlátok:
    csak az egybeírt #include-okat nézi (pl. #  include-ot nem)
    csak a projekt források helyén (-d opció) keres
    nem kerüli ki az #ifdef-eket, stringeket, kommenteket
    függőségek száma < 128 (így védi ki a végtelen rekurziót)

2010.07.11 -- 1.2.27
  Korábban csak a prg-k include-jait vizsgálta.
  Most minden elsődleges forrásban (amiből obj készül) vizsgálja az

    #include "fpsec"
  
  előfordulásokat, és ha megtalálja fspec-et a -d opcióval megadott 
  helyeken, akkor beveszi azt a függőségek közé. 

2010.02.04 -- 1.2.26
  A @parfile-ból olvasott paraméterek nem a lista végére kerülnek
  (mint eddig), hanem az inkludálás helyére. Így egy parfile után 
  megadott paraméter felül tud írni egy parfileban megadottat.

2008.06.20 -- 1.2.25
  A --debug opció bekapcsolja a debugolást.
  Jelzi, ha nem találja a parfilét (vagy üres).

2006.09.26 -- 1.2.24
  A @parfile.bld-ek keresése a BUILD_BAT directoryban.

2006.04.22 -- 1.2.23
  Ha meg van(nak) adva a -m/-x opció(k), 
  akkor csak azokból csinál exe-t, a többi prg-ből nem.
  Így explicite fel lehet sorolni, hogy milyen exe-k készüljenek,
  ami akkor jó, ha különböző paraméterezésű linkelésekre van szükség.
  Ezzel a -m és -x opció felcserélhető, mindkettő additív.

2006.03.21 -- 1.2.22
  Portolas unicode-ra.

2006.01.26 -- 1.2.21
  Windows hiba kerülgetése:
  Listafájl (objects) beiktatása a hosszú parancssorok 
  kerülése érdekében könyvtárkészítéskor és linkeléskor,
  ui. a Windows csak rövid parancssorok kezelésére képes.
  Egyúttal változnak az obj2lib.bat és obj2exe.bat scriptek.

2005.12.01 -- 1.2.20
  htm2ctm támogatás

2005.09.12 -- 1.2.19
  -v opció: csak a verziószámot írja ki, azután kilép
  -q opció: elnyomja a verziószám kiírását

2005.08.21 -- 1.2.18
  Könyvtárak keresésekor fname helyett fnameext.

2005.04.07 -- 1.2.17
  A BUILD_SRC directoryt csak olyan pathok elé illesztjük be, 
  amik nem /-vel kezdődnek, vagyis az abszolút specifikációkat 
  nem módosítjuk.

2004.03.18 -- 1.2.16
  Lemon (.lem) források támogatása.

2003.08.19 -- 1.2.15
  Minden platformon  abszolút lib specifikációk.

2003.02.20 -- 1.2.14
  A komment jobb kezelése.

2001.02.16 -- 1.2.13
  A sor elején levő # komment támogatása a paraméterfilékben.
  Főprogram keresése "function main" helyett "function main(".

2000.09.21 -- 1.2.12
  Könyvtár kereséskor a .lib, .a, .so kiterjesztéssel megadott
  neveknél nem a BUILD_SHR-ben előírt static/shared választást
  csinálja, hanem a megadott nevű könytárat választja.

  Háromféle névképzés van:
  
    1)    name.lib      (DOS névkonvenció, statikus lib)
    2) libname.a        (UNIX névkonvenció, statikus lib) 
    3) libname.so       (UNIX névkonvenció, shared lib)  
      

  Ha a Buildnek a nevet "name" alakban adjuk meg, 
  akkor a fenti három néven keresi a könyvtárat a libpath-ban,
  a shared libeket preferálva (a BUILD_SHR=static paraméterrel
  lehet elérni a static libek preferálását).

  Ha a nevet kiterjesztéssel (és az esetleges lib előtaggal) 
  együtt adjuk meg, akkor Build mindig csak a megadott nevű libet 
  keresi, így tetszőleges kombinációban lehet shared és static 
  libraryket linkelni.


2000.03.14 -- 1.2.11
  set_dosconv(0) berakva
  setpos teljesen kivéve
  soremelések
 
2000.03.12 -- 1.2.10
  Setpos ifdefelése kilépés előtt, hogy UNIX-on feleslegesen
  ne villanjon fel az üres ablak.

2000.02.22 -- 1.2.09
  Ha többféle típusú library létezik, akkor eddig a default 
  választás a statikus lib volt, ezután a default a shared lib. 
  Ha mégis a statikus változat kell, azt a BUILD_SHR=static
  kapcsolóval lehet beállítani.

2000.01.30 -- 1.2.08
  Shared libraryk készítése Linuxon.

2000.01.14 -- 1.2.07
  Nem található libek diagnosztizálása javítva.

2000.01.13 -- 1.2.06
  Include-ok keresése nem szabad függjön CR-től.

2000.01.03 -- 1.2.05
  Portolás UNIX-ra: "\" helyett dirsep() 

  Keresi a  librarykat libpathban. 
  Ezzel lehetséges, hogy a linkernek ne külön adjuk meg a libpath és
  libfile opciókat, hanem a megtalált libek teljes specifikációját.

1999.10.29 -- 1.2.04
  A main modulok közötti keresésben ki kell írni ascan kódblokkját, 
  mert alapértelmezésben az '=' operátorral keres (== kell).

1999.07.27 -- 1.2.03
  $$(x) --> x/$(build_obj)/x makró támogatása

1999.07.14 -- 1.2.02
  BUILD_SRC hatása a -i kapcsoló tartalmára is kiterjed.

1999.07.09 -- 1.2.01
  Copyright, kiterjesztések

1999.06.30 -- 1.2.00
  Ha sem -x sem -l nincs megadva, akkor az összes main modulból
  exe-t csinál, minden egyéb object hozzálinkelésével, és nem készít
  könyvtárat, ez az új default. 

  usage() csak az explicit -h opcióra, vagy rossz kapcsolóra

1999.05.31 -- 1.1.01
  a makródefiníció paramétereket nem kell kisbetűre konvertálni

1999.05.25 -- 1.1.00
  makródefiníciók build paraméterezésében

  1. A "name=value" paraméter hatására build beállítja
     a name nevű környezeti változót value-ra, amit azután
     az implicit szabályokhoz tartozó batch-ek használhatnak.

  2. A $(name) szimbólum értéke egyenlő getenv(name) értékével
     (build futása közben). Ezzel megkapható a csomagspecifikus
     batch-ekben beállított változók értéke.


1999.05.25 -- 1.0.07
  -d és -i opciók nélkül is keres include-okat .-ban,
  azaz -i-nek ugyanúgy defaultja ., mint -d-nak
 
1999.05.25 -- 1.0.06
  szabályalkalmazás sorrendje azonos s_rules sorrendjével

1999.05.25 -- 1.0.05
  lxi kiterjesztés (megszűnt)
  
1999.05.23 -- 1.0.04
  -m opció (main modulok explicit megadása)
 
1999.05.19 -- 1.0.03
  BUILD_SRC-re relatív path.
 
1999.05.19 -- 1.0.02
  A szeparátor mindenhol egységesen ",;".
 
1999.05.19 -- 1.0.01
  A többszöröződés megszüntetve todo-ban.

1999.05.13 -- 1.0.00
  Első verzió.

    