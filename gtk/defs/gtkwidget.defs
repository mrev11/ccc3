

(define-function gtk_widget_get_type
  (in-module GtkWidget)
  (c-name "gtk_widget_get_type")
  (return-type "GtkType")
)

(define-function gtk_widget_new
  (c-name "gtk_widget_new")
  (is-constructor-of GtkWidget)
  (return-type "GtkWidget*")
  (parameters
    '("GtkType" "type")
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method ref
  (of-object "GtkWidget")
  (c-name "gtk_widget_ref")
  (return-type "GtkWidget*")
)

(define-method unref
  (of-object "GtkWidget")
  (c-name "gtk_widget_unref")
  (return-type "none")
)

(define-method destroy
  (of-object "GtkWidget")
  (c-name "gtk_widget_destroy")
  (return-type "none")
)

(define-method destroyed
  (of-object "GtkWidget")
  (c-name "gtk_widget_destroyed")
  (return-type "none")
  (parameters
    '("GtkWidget**" "widget_pointer")
  )
)

(define-method set
  (of-object "GtkWidget")
  (c-name "gtk_widget_set")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-method unparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_unparent")
  (return-type "none")
)

(define-method show
  (of-object "GtkWidget")
  (c-name "gtk_widget_show")
  (return-type "none")
)

(define-method show_now
  (of-object "GtkWidget")
  (c-name "gtk_widget_show_now")
  (return-type "none")
)

(define-method hide
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide")
  (return-type "none")
)

(define-method show_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_show_all")
  (return-type "none")
)

(define-method hide_all
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide_all")
  (return-type "none")
)

(define-method map
  (of-object "GtkWidget")
  (c-name "gtk_widget_map")
  (return-type "none")
)

(define-method unmap
  (of-object "GtkWidget")
  (c-name "gtk_widget_unmap")
  (return-type "none")
)

(define-method realize
  (of-object "GtkWidget")
  (c-name "gtk_widget_realize")
  (return-type "none")
)

(define-method unrealize
  (of-object "GtkWidget")
  (c-name "gtk_widget_unrealize")
  (return-type "none")
)

(define-method queue_draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw")
  (return-type "none")
)

(define-method queue_draw_area
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_draw_area")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
)

(define-method queue_clear
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_clear")
  (return-type "none")
  (deprecated "use GtkWidget.queue_draw")
)

(define-method queue_clear_area
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_clear_area")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
    '("gint" "width")
    '("gint" "height")
  )
  (deprecated "use GtkWidget.queue_draw_area")
)

(define-method queue_resize
  (of-object "GtkWidget")
  (c-name "gtk_widget_queue_resize")
  (return-type "none")
)

(define-method draw
  (of-object "GtkWidget")
  (c-name "gtk_widget_draw")
  (return-type "none")
  (parameters
    '("GdkRectangle*" "area")
  )
  (deprecated "use GtkWidget.queue_draw_area")
)

(define-method size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_request")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "requisition")
  )
)

(define-method size_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_size_allocate")
  (return-type "none")
  (parameters
    '("GtkAllocation*" "allocation")
  )
)

(define-method get_child_requisition
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_requisition")
  (return-type "none")
  (parameters
    '("GtkRequisition*" "requisition")
  )
)

(define-method add_accelerator
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_accelerator")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_signal")
    '("GtkAccelGroup*" "accel_group")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
    '("GtkAccelFlags" "accel_flags")
  )
)

(define-method remove_accelerator
  (of-object "GtkWidget")
  (c-name "gtk_widget_remove_accelerator")
  (return-type "gboolean")
  (parameters
    '("GtkAccelGroup*" "accel_group")
    '("guint" "accel_key")
    '("GdkModifierType" "accel_mods")
  )
)

(define-method set_accel_path
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_accel_path")
  (return-type "none")
  (parameters
    '("const-gchar*" "accel_path")
    '("GtkAccelGroup*" "accel_group")
  )
)

(define-method list_accel_closures
  (of-object "GtkWidget")
  (c-name "gtk_widget_list_accel_closures")
  (return-type "GList*" ".parray.freelist.")
)

(define-method mnemonic_activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_mnemonic_activate")
  (return-type "gboolean")
  (parameters
    '("gboolean" "group_cycling")
  )
)

(define-method event
  (of-object "GtkWidget")
  (c-name "gtk_widget_event")
  (return-type "gboolean")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method send_expose
  (of-object "GtkWidget")
  (c-name "gtk_widget_send_expose")
  (return-type "gint")
  (parameters
    '("GdkEvent*" "event")
  )
)

(define-method activate
  (of-object "GtkWidget")
  (c-name "gtk_widget_activate")
  (return-type "gboolean")
)

(define-method set_scroll_adjustments
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_scroll_adjustments")
  (return-type "gboolean")
  (parameters
    '("GtkAdjustment*" "hadjustment" (null-ok))
    '("GtkAdjustment*" "vadjustment" (null-ok))
  )
)

(define-method reparent
  (of-object "GtkWidget")
  (c-name "gtk_widget_reparent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "new_parent")
  )
)

(define-method intersect
  (of-object "GtkWidget")
  (c-name "gtk_widget_intersect")
  (return-type "gboolean")
  (parameters
    '("GdkRectangle*" "area")
    '("GdkRectangle*" "intersection")
  )
)

(define-method region_intersect
  (of-object "GtkWidget")
  (c-name "gtk_widget_region_intersect")
  (return-type "GdkRegion*")
  (parameters
    '("GdkRegion*" "region")
  )
)

(define-method freeze_child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_freeze_child_notify")
  (return-type "none")
)

(define-method child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_notify")
  (return-type "none")
  (parameters
    '("const-gchar*" "child_property")
  )
)

(define-method thaw_child_notify
  (of-object "GtkWidget")
  (c-name "gtk_widget_thaw_child_notify")
  (return-type "none")
)

(define-method is_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_focus")
  (return-type "gboolean")
)

(define-method grab_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_focus")
  (return-type "none")
)


(define-method set_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_name")
  (return-type "const-gchar*")
  (comment "must not free")
)

(define-method set_state
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_state")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
  )
)

(define-method set_sensitive
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_sensitive")
  (return-type "none")
  (parameters
    '("gboolean" "sensitive")
  )
)

(define-method set_app_paintable
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_app_paintable")
  (return-type "none")
  (parameters
    '("gboolean" "app_paintable")
  )
)

(define-method set_double_buffered
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_double_buffered")
  (return-type "none")
  (parameters
    '("gboolean" "double_buffered")
  )
)

(define-method set_redraw_on_allocate
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_redraw_on_allocate")
  (return-type "none")
  (parameters
    '("gboolean" "redraw_on_allocate")
  )
)

(define-method set_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent")
  (return-type "none")
  (parameters
    '("GtkWidget*" "parent")
  )
)

(define-method set_parent_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_parent_window")
  (return-type "none")
  (parameters
    '("GdkWindow*" "parent_window")
  )
)

(define-method set_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_child_visible")
  (return-type "none")
  (parameters
    '("gboolean" "is_visible")
  )
)

(define-method get_child_visible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_child_visible")
  (return-type "gboolean")
)

(define-method get_parent
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent")
  (return-type "GtkWidget*")
)

(define-method get_parent_window
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_parent_window")
  (return-type "GdkWindow*")
)

(define-method child_focus
  (of-object "GtkWidget")
  (c-name "gtk_widget_child_focus")
  (return-type "gboolean")
  (parameters
    '("GtkDirectionType" "direction")
  )
)

(define-method set_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_size_request")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
)
  
(define-method get_size_request
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_size_request")
  (return-type "none")
  (parameters
    '("gint*" "width")
    '("gint*" "height")
  )
  (CCC "byhand")
)

(define-method set_uposition
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_uposition")
  (return-type "none")
  (parameters
    '("gint" "x")
    '("gint" "y")
  )
  (deprecated "")
)

(define-method set_usize
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_usize")
  (return-type "none")
  (parameters
    '("gint" "width")
    '("gint" "height")
  )
  (deprecated "use GtkWidget.set_size_request")
)

(define-method set_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_events")
  (return-type "none")
  (parameters
    '("gint" "events")
  )
)

(define-method add_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_add_events")
  (return-type "none")
  (parameters
    '("gint" "events")
  )
)

(define-method set_extension_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_extension_events")
  (return-type "none")
  (parameters
    '("GdkExtensionMode" "mode")
  )
)

(define-method get_extension_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_extension_events")
  (return-type "GdkExtensionMode")
)

(define-method get_toplevel
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_toplevel")
  (return-type "GtkWidget*")
)

(define-method get_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_ancestor")
  (return-type "GtkWidget*")
  (parameters
    '("GtkType" "widget_type")
  )
)

(define-method get_colormap
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_colormap")
  (return-type "GdkColormap*")
)

(define-method get_visual
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_visual")
  (return-type "GdkVisual*")
)

(define-method get_settings
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_settings")
  (return-type "GtkSettings*")
)

(define-method get_accessible
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_accessible")
  (return-type "AtkObject*")
)

(define-method set_colormap
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-method get_events
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_events")
  (return-type "gint")
)

(define-method get_pointer
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pointer")
  (return-type "none")
  (parameters
    '("gint*" "x")
    '("gint*" "y")
  )
  (CCC "byhand")
)

(define-method is_ancestor
  (of-object "GtkWidget")
  (c-name "gtk_widget_is_ancestor")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "ancestor")
  )
)

(define-method translate_coordinates
  (of-object "GtkWidget")
  (c-name "gtk_widget_translate_coordinates")
  (return-type "gboolean")
  (parameters
    '("GtkWidget*" "dest_widget")
    '("gint" "src_x")
    '("gint" "src_y")
    '("gint*" "dest_x")
    '("gint*" "dest_y")
  )
  (CCC "byhand")
)

(define-method hide_on_delete
  (of-object "GtkWidget")
  (c-name "gtk_widget_hide_on_delete")
  (return-type "gboolean")
)

(define-method set_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_style")
  (return-type "none")
  (parameters
    '("GtkStyle*" "style" (null-ok))
  )
)

(define-method ensure_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_ensure_style")
  (return-type "none")
)

(define-method get_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_style")
  (return-type "GtkStyle*")
)

(define-method modify_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_style")
  (return-type "none")
  (parameters
    '("GtkRcStyle*" "style")
  )
)

(define-method get_modifier_style
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_modifier_style")
  (return-type "GtkRcStyle*")
)

(define-method modify_fg
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_fg")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_bg
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_bg")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_text
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_text")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_base
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_base")
  (return-type "none")
  (parameters
    '("GtkStateType" "state")
    '("GdkColor*" "color")
  )
)

(define-method modify_font
  (of-object "GtkWidget")
  (c-name "gtk_widget_modify_font")
  (return-type "none")
  (parameters
    '("PangoFontDescription*" "font_desc")
  )
)

(define-method create_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_context")
  (caller-owns-return #t)
  (return-type "PangoContext*")
)

(define-method get_pango_context
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_pango_context")
  (return-type "PangoContext*")
)

(define-method create_pango_layout
  (of-object "GtkWidget")
  (c-name "gtk_widget_create_pango_layout")
  (caller-owns-return #t)
  (return-type "PangoLayout*")
  (parameters
    '("const-gchar*" "text")
  )
)

(define-method render_icon
  (of-object "GtkWidget")
  (c-name "gtk_widget_render_icon")
  (return-type "GdkPixbuf*")
  (parameters
    '("const-gchar*" "stock_id")
    '("GtkIconSize" "size")
    '("const-gchar*" "detail" (null-ok) (default "NULL"))
  )
)

(define-method set_composite_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_composite_name")
  (return-type "none")
  (parameters
    '("const-gchar*" "name")
  )
)

(define-method get_composite_name
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_composite_name")
  (return-type "gchar*")
  (comment "must not free")
)

(define-method reset_rc_styles
  (of-object "GtkWidget")
  (c-name "gtk_widget_reset_rc_styles")
  (return-type "none")
)

(define-function widget_push_colormap
  (c-name "gtk_widget_push_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "cmap")
  )
)

(define-function widget_push_composite_child
  (c-name "gtk_widget_push_composite_child")
  (return-type "none")
)

(define-function widget_pop_composite_child
  (c-name "gtk_widget_pop_composite_child")
  (return-type "none")
)

(define-function widget_pop_colormap
  (c-name "gtk_widget_pop_colormap")
  (return-type "none")
)

(define-method install_style_property
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_install_style_property")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec")
  )
)

(define-method install_style_property_parser
  (of-object "GtkWidgetClass")
  (c-name "gtk_widget_class_install_style_property_parser")
  (return-type "none")
  (parameters
    '("GParamSpec*" "pspec")
    '("GtkRcPropertyParser" "parser")
  )
)

(define-method style_get_property
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get_property")
  (return-type "none")
  (parameters
    '("const-gchar*" "property_name")
    '("GValue*" "value")
  )
)

(define-method style_get_valist
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get_valist")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
    '("va_list" "var_args")
  )
  (CCC "byhand")
)

(define-method style_get
  (of-object "GtkWidget")
  (c-name "gtk_widget_style_get")
  (return-type "none")
  (parameters
    '("const-gchar*" "first_property_name")
  )
  (varargs #t)
)

(define-function widget_get_default_style
  (c-name "gtk_widget_get_default_style")
  (return-type "GtkStyle*")
)

(define-function widget_set_default_colormap
  (c-name "gtk_widget_set_default_colormap")
  (return-type "none")
  (parameters
    '("GdkColormap*" "colormap")
  )
)

(define-function widget_get_default_colormap
  (c-name "gtk_widget_get_default_colormap")
  (return-type "GdkColormap*")
)

(define-function widget_get_default_visual
  (c-name "gtk_widget_get_default_visual")
  (return-type "GdkVisual*")
)

(define-method set_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_set_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir")
  )
)

(define-method get_direction
  (of-object "GtkWidget")
  (c-name "gtk_widget_get_direction")
  (return-type "GtkTextDirection")
)

(define-function widget_set_default_direction
  (c-name "gtk_widget_set_default_direction")
  (return-type "none")
  (parameters
    '("GtkTextDirection" "dir")
  )
)

(define-function widget_get_default_direction
  (c-name "gtk_widget_get_default_direction")
  (return-type "GtkTextDirection")
)

(define-method shape_combine_mask
  (of-object "GtkWidget")
  (c-name "gtk_widget_shape_combine_mask")
  (return-type "none")
  (parameters
    '("GdkBitmap*" "shape_mask")
    '("gint" "offset_x")
    '("gint" "offset_y")
  )
)

(define-method reset_shapes
  (of-object "GtkWidget")
  (c-name "gtk_widget_reset_shapes")
  (return-type "none")
)

(define-method path
  (of-object "GtkWidget")
  (c-name "gtk_widget_path")
  (return-type "none")
  (parameters
    '("guint*" "path_length")
    '("gchar**" "path")
    '("gchar**" "path_reversed")
  )
  (CCC "byhand")
)

(define-method class_path
  (of-object "GtkWidget")
  (c-name "gtk_widget_class_path")
  (return-type "none")
  (parameters
    '("guint*" "path_length")
    '("gchar**" "path")
    '("gchar**" "path_reversed")
  )
  (CCC "byhand")
)


(define-method _get_aux_info
  (of-object "GtkWidget")
  (c-name "_gtk_widget_get_aux_info")
  (return-type "GtkWidgetAuxInfo*")
  (parameters
    '("gboolean" "create")
  )
)

(define-method _propagate_hierarchy_changed
  (of-object "GtkWidget")
  (c-name "_gtk_widget_propagate_hierarchy_changed")
  (return-type "none")
  (parameters
    '("GtkWidget*" "previous_toplevel")
  )
)

(define-function _gtk_widget_peek_colormap
  (c-name "_gtk_widget_peek_colormap")
  (return-type "GdkColormap*")
)

(define-method selection_owner_set
  (of-object "GtkWidget")
  (c-name "gtk_selection_owner_set")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "selection")
    '("guint32" "time" (default "GDK_CURRENT_TIME"))
  )
)

(define-method selection_add_target
  (of-object "GtkWidget")
  (c-name "gtk_selection_add_target")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("guint" "info")
  )
)

(define-method selection_add_targets
  (of-object "GtkWidget")
  (c-name "gtk_selection_add_targets")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection")
    '("const-GtkTargetEntry*" "targets")
    '("guint" "ntargets")
  )
)

(define-method selection_clear_targets
  (of-object "GtkWidget")
  (c-name "gtk_selection_clear_targets")
  (return-type "none")
  (parameters
    '("GdkAtom" "selection")
  )
)

(define-method selection_convert
  (of-object "GtkWidget")
  (c-name "gtk_selection_convert")
  (return-type "gboolean")
  (parameters
    '("GdkAtom" "selection")
    '("GdkAtom" "target")
    '("guint32" "time" (default "GDK_CURRENT_TIME"))
  )
)

(define-method selection_remove_all
  (of-object "GtkWidget")
  (c-name "gtk_selection_remove_all")
  (return-type "none")
)

(define-method selection_clear
  (of-object "GtkWidget")
  (c-name "gtk_selection_clear")
  (return-type "gboolean")
  (parameters
    '("GdkEventSelection*" "event")
  )
)

(define-method rc_get_style
  (of-object "GtkWidget")
  (c-name "gtk_rc_get_style")
  (return-type "GtkStyle*")
)


Bővítmények:

(define-method grab_default
  (of-object "GtkWidget")
  (c-name "gtk_widget_grab_default")
  (return-type "none")
  (CCC "REG,add")
  (comment "
    Hozzáadott funkcionalitás:
    Engedélyezzük, hogy a widget megkaphassa a default fókuszt.
    Eredetileg a GTK ilyenkor mindig két API hívást alkalmazott:

    GTK_WIDGET_SET_FLAGS(GTK_WIDGET(self),GTK_CAN_DEFAULT); //betoldva
    gtk_widget_grab_default(GTK_WIDGET(self));
  ")
)

(define-method get_flags
  (of-object "GtkWidget")
  (c-name "GTK_WIDGET_FLAGS")
  (return-type "guint")
  (CCC "API,REG,macro")
  (comment "
    Eredetileg ez egy makró (GTK_WIDGET_FLAGS), 
    a CCC-ben függvényként definiálva: gtk.widget.get_flags()
  ")
)

(define-method set_flags
  (of-object "GtkWidget")
  (c-name "GTK_WIDGET_SET_FLAGS")
  (return-type "none")
  (parameters
    '("guint" "flags")
  )
  (CCC "API,REG,macro")
  (comment "
    Eredetileg ez egy makró (GTK_WIDGET_SET_FLAGS), 
    a CCC-ben függvényként definiálva: gtk.widget.set_flags()
  ")
)

(define-method unset_flags
  (of-object "GtkWidget")
  (c-name "GTK_WIDGET_UNSET_FLAGS")
  (return-type "none")
  (parameters
    '("guint" "flags")
  )
  (CCC "API,REG,macro")
  (comment "
    Eredetileg ez egy makró (GTK_WIDGET_UNSET_FLAGS), 
    a CCC-ben függvényként definiálva: gtk.widget.unset_flags()
  ")
)

(define-method "get_drawable"
    (of-object "GtkWidget")
    (c-name "gtk_widget_get_drawable")
    (return-type "GdkDrawable*")
    (CCC "REG,add")
)

(define-method "get_allocation"
    (of-object "GtkWidget")
    (c-name "gtk_widget_get_allocation")
    (return-type "array")
    (CCC "REG,add")
)

