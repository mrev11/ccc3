

#define VERSION "CCC3-1.0.13"

#ifdef _HISTORY_

2011.07.08 -- 1.0.13
  tstru: path kezeles javitva
  tstru, tview: fullpath konverzio relativ path-ra

2008.09.08 -- 1.0.12
   bt2dbf/bt2txt [-c ctrl] [-f] fname

2008.06.02 -- 1.0.11"
   10-nel hosszabb (max 32) mezonevek.

   Maguk a motorok nem valtoztak.
   A DATIDX es BTBTX motor magatol mukodik hosszu mezonevekkel is
   A DBFCTX motor termeszetesen nem tud hosszu mezonevekkel mukodni.
   A utilityk (tstru, xstru, tview, xview, ddict2) kicsit valtoztak, 
   hogy kezelni lehessen a hosszu mezoneveket.

   A dat2dbf, bt2dbf (egyelore) eredeti allapotukban maradtak. 
   Mukodnek, de lecsonkitjak a mezoneveket 10 karakterre. 
   Emiatt a dbf exportban egyezo mezonevek is keletkezhetnek.

   A tableobjektum loaddbf metodusa szinten eredeti allapotaban maradt. 
   Az olyan dbf-beli mezoket, amiknek nincs megfeleloje a 
   tablaobjektumban (mert pl. lerovidult a neve) nem importalja.

   Tehat csak az interaktiv tablaeditalo programokban van valtozas.

2006.08.17 -- 1.0.10"
   kdirseek-ben a szeles mezok picture-je javitva.

2006.02.20 -- 1.0.09
  Tview inditasakor beallithato az index (-c opcio).

2001.10.15 -- 1.0.08
  xstru/dstru elszallt, ha mezo appendbol esc-pel kileptek.

2001.08.29 -- 1.0.07
  xstru elszallt, ha index appendbol esc-pel kileptek.

2001.07.07 -- 1.0.06
  tabModRecord helyett tabEditRecord a konyvtarbol.


2000.07.15 -- 1.0.05
 
  Zap, exclusive open es rekord lock funkcioval bovitve.
  A z editor billentyukezeloje atveve.

2000.05.11 -- 1.0.04

  kdirseek gyorskeresoje inicializalva van az aktualis ertekekkel

2000.03.18 -- 1.0.03
  
  A szeles picture-ok transzformacioja javitva.

  brwedit.prg (alapkonyvtar) javitva, ezzel a bstru es
  tarsai elszallasa megszunt.


1999.06.15 -- 1.0.02

  implementacio DBFCTX-re is (indexek nelkul)
  tovabbi javitgatasok


1999.06.13 -- 1.0.01
 
  A struktura modositas algoritmusa a kovetkezo volt:
  
  1. az oszlopok tombjet {}-re atirtuk,
  2. az indexek tombjet {}-re atirtuk,
  3. tabAddColumn() hivasokkal betettuk az uj oszlokoat,
  4. tabAddIndex() hivasokkal betettuk az uj indexeket,
  5. az igy manipulalt objektummal tabUpgrade-et csinaltunk.
  
  Ez azonban ROSSZ, mert a rekordbuffer hossza nem inicializalodik,
  az ujonnan betett mezok offsetei rossz ertekek, ami mindenfele
  GPF-re vezet, es a modositott file teljesen elromlik. 
  
  Helyette ez a javitott algoritmus kell:
  
  1. tabNew0()-val vadonat uj objektumot csinalunk
  2. tabAddColumn() hivasokkal betesszuk az uj oszlokoat
  3. tabAddIndex() hivasokkal betesszuk az uj indexeket
  4. az objektummal tabUpgrade-et csinalunk
 

  Oszlopnevek, tipusok, hosszak, index oszlopok ellenorzese.
 
  Rengeteg kisebb nagyobb egyeb javitas.

#endif
