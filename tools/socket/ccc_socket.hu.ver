2018.07.05 peer nevek lekerdezese cert-bol:
  sslcon_connect(ssl,blk) plusz opcionalis parameter: blk.
  sslcon:connect(host,port,blk) plusz opcionalis parameter: blk.
  Az opcionalis kodblokk az sslctx_verifycb()-bol hivodik meg.
  Az sslctx_verifycb()-nek uj implementacioja van, es kulon 
  forrasmodulba kerult, hogy alkalmazasszinten  cserelheto legyen.
  A sslctx_verifycb a certificate chain minden elemere meghivodik:
    eloszor a root ca cert-jere,
    aztan a kozbulso cert-ekre, 
    vegul az aktualis peer cert-jere (depth=0).
  A kodblokk az aktualis peer neveivel (mint parameterrel) hivodik meg:
    eloszor a peer CN (Common Name) nevevel, 
    utana a SAN (Subject Alternative Name) neveivel.
  Pelda:
    local names:={}
    ...
    sslcon:connect("comfirm.hu",443,{|x|aadd(names,x)})
    ...
  A connect utan a names array-ben megkapjuk a peer neveit. 
  Ez alapjan ellenorizni lehet, hogy a peer neve passzol-e
  ahhoz a host/domain nevhez, amihez konnektaltunk. 
  Ekezetes szovegek kigyomlalva.

2018.06.29 sslsocket javitgatas:
  A http_readmessage() osszegyujtve (egyben) adta a transfer-encoding=chunked
  tipusu uzeneteket, de meghagyta az eredeti headert. Most a transfer-encoding
  headert kiveszi, es berak egy content-length headert.
  sslcon.initialize minden esetben erteket ad this:ssl-nek es this:fd-nek.
  sslcon.connect a set_tlsext_host_name() hivassal a host nevet is kuldi.
  Uj fuggveny: sslcon_set_tlsext_host_name()


2012.06.16 -- 1.3.07
  http_readmessage transfer-encoding: chunked uzeneteket is olvas.
  http_readmessage timeout eseten minden agon NIL-t ad.

2009.02.05 -- 1.3.06
  Idomeres tulcsordulasa kezelve.

2009.02.04 -- 1.3.05
  Az sslctx osztaly bovult a handshake_timeout attributummal,
  ez mindenhol at van adva sslcon_accept-nek, defaultja 10 sec.
  A timeout a handshake-re vonatkozik, azaz a connect utan ennyi 
  ido van az SSL kapcsolat felepitesere. Ha az SSL_accept-et blokkolo 
  socketre hivjuk meg (mint korabban), es a konnektalo fel egyszeruen 
  nem mond semmit, akkor a kommunikacio orokre beragad.

  Elobb sslerrorNew, utana ssl:close, a hibak kiolvasasa erdekeben.

2008.01.31 -- 1.3.04
  Uj socket.inherit implementacio.
  Windows 2000-en a DuplicateHandle-es megoldas jol mukodott.
  XP-tol kezdodoen viszont a DuplicateHandle nem alkalmazhato socketekre,
  hanem helyette a Set/GetHandleInformation-t kell hasznalni.
  A set/gethandleinheritflag csak Windows HANDLE-ekre mukodik.
  A set/getcloexecflag Windowson csak POSIX leirokra mukodik.
  A set/getcloexecflag file- es pipe-leirokra UNIX-on es Windowson 
  egyforman mukodik. UNIX-on ezenkivul a set/getcloexecflag socket 
  leirokra is mukodik.

2007.12.17 -- 1.3.03
  Az ssl_session_id-t rovidebbre kellett venni: SESSIONID+pid

2007.11.25 -- 1.3.02
  Uj method: socket:inherit(flag)

2007.11.16 -- 1.3.01
  korabbi select -> select_sckdesc
  select socket objektumokra -> select_sckobj
  uj select: valaszt az elobbi keto kozul

2007.07.20 -- 1.3.00
  SSL tamogatas.
  Burkolo objektum a socketekhez: socketClass
  Burkolo objektum az SSL contextekhez: sslctxClass
  Burkolo objektum az SSL kapcsolatokhoz: sslconClass
  A socket es sslcon kozos interfesze (fd,recv,send,pending,close)
  lehetove teszi hogy ugyanaz a kod (az SSL bekapcsolasat kiveve)
  mukodjon SSL-lel vagy anelkul.

2006.04.13 -- 1.2.00
  Portolva unicodera.

2005.07.08 -- 1.1.05
  MSG_NOSIGNAL megjelent a FreeBSD 6.0-ban, korabban (5.3-ban) 
  nem volt definialva, tobbszoros definicio elkerulve.

2004.01.10 -- 1.1.04
  Az elozo hiba javitasa SIGPIPE ignoralasaval.

2003.12.22 -- 1.1.03
  socket_write-ban a send ismetlese kihagyva.
  A bongeszo neha nem varja meg a kert lap atkuldeset,
  hanem lezarja a socketet, es atter egy masik lap letoltesere. 
  Ha ilyenkor megprobaljuk a maradekot ujabb send-ben kuldeni, 
  akkor a program SIGPIPE-pal elszall.
 
2003.02.04 -- 1.1.02
  listen() atkerult server_socket_accept()-bol server_socket_new()-ba. 

2003.07.29 -- 1.1.01
  sread() malloc hivas nelkul.

2002.10.12 -- 1.1.00
  Uj reteg: sckutil.cpp, modularisabb szervezes.

2002.07.01 -- 1.0.01
  Bind bovitve: megadhato az ip cim.

   